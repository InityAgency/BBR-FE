name: Deploy NextJS (Mono-Repo::Admin & Web) with PNPM & Turbo to Production EC2

on:
  push:
    branches:
      - production

jobs:
  deploy-nextjs:
    runs-on: ubuntu-latest

    env:
      REMOTE_BASE_DIR: /mnt/app/bbr-frontend-new

    steps:
      - name: ðŸ“¥ Checkout Repository
        uses: actions/checkout@v4

      - name: ðŸ“¦ Install PNPM
        uses: pnpm/action-setup@v4
        with:
          version: "9.15.4"

      - name: ðŸ“¦ Verify PNPM
        run: pnpm --version

      - name: ðŸ”§ Install Workspace Dependencies
        run: pnpm install --frozen-lockfile

      # 1) Build Admin App
      - name: ðŸ”¨ Build Admin App
        working-directory: ./apps/admin
        env:
          NEXT_PUBLIC_API_URL: ${{ vars.NEXT_PUBLIC_API_URL }}
          NEXT_PUBLIC_API_VERSION: ${{ vars.NEXT_PUBLIC_API_VERSION }}
          NEXT_PUBLIC_GOOGLE_MAPS_API_KEY: ${{ secrets.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY }}
        run: pnpm run build

      # 2) Build Web App
      - name: ðŸ”¨ Build Web App
        working-directory: ./apps/web
        env:
          NODE_ENV: production
          NEXT_PUBLIC_API_URL: ${{ vars.NEXT_PUBLIC_API_URL }}
          NEXT_PUBLIC_API_VERSION: ${{ vars.NEXT_PUBLIC_API_VERSION }}
          NEXT_PUBLIC_WP_API_URL: ${{ vars.NEXT_PUBLIC_WP_API_URL }}
          NEXT_PUBLIC_SITE_URL: ${{ vars.NEXT_PUBLIC_SITE_URL }}
          RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
          RESEND_AUDIENCE_ID: ${{ secrets.RESEND_AUDIENCE_ID }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_CALLBACK_URL: ${{ vars.GOOGLE_CALLBACK_URL }}
          NEXT_PUBLIC_GOOGLE_MAPS_API_KEY: ${{ secrets.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY }}
        run: pnpm run build

      # 3) Package Both Builds + ecosystem.config.js
      - name: ðŸ“¦ Prepare Artifacts
        run: |
          tar -czf nextjs-build.tar.gz     \
            apps/admin/.next               \
            apps/admin/public              \
            apps/admin/package.json        \
            apps/admin/ecosystem.config.js \
            apps/web/.next                 \
            apps/web/public                \
            apps/web/package.json          \
            apps/web/ecosystem.config.js   \
            package.json                   \
            pnpm-lock.yaml                 \
            pnpm-workspace.yaml

      - name: ðŸ“¡ Deploy to EC2 via SCP
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST_PROD }} >> ~/.ssh/known_hosts

          # 4.1 Kreiramo destinacijski folder na EC2 (/mnt/app/bbr-frontend-new)
          ssh -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_HOST_PROD }} "sudo mkdir -p $REMOTE_BASE_DIR && sudo chown ubuntu:ubuntu $REMOTE_BASE_DIR"

          # 4.2 Kopiraj tar fajl na EC2 u /mnt/app/bbr-frontend-new
          scp nextjs-build.tar.gz ubuntu@${{ secrets.EC2_HOST_PROD }}:$REMOTE_BASE_DIR/

          # 4.3 Raspakiraj tar unutar /mnt/app/bbr-frontend-new
          ssh -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_HOST_PROD }} "cd $REMOTE_BASE_DIR && tar -xzf nextjs-build.tar.gz && rm nextjs-build.tar.gz"

      - name: ðŸš€ Restart Admin & Web on EC2
        run: |
          ssh -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_HOST_PROD }} << 'EOF'
            set -e

            cd $REMOTE_BASE_DIR

            sudo pnpm install

            pm2 reload apps/admin/ecosystem.config.js

            pm2 reload apps/web/ecosystem.config.js
          EOF

      - name: Report Status
        if: always()
        uses: ravsamhq/notify-slack-action@v1
        with:
          status: ${{ job.status }}
          notification_title: "[PRODUCTION] - New Release BBR NextJS Admin & Web to EC2"
          mention_groups: ""
          footer: "<{run_url}|View Run>"
          message_format: "{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}@{branch}> on <{commit_url}|{commit_sha}>"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}
